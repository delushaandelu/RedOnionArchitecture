// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CategoryDescription");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CategoryName");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ImageUrl");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ProductUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ProductUrl");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.HasKey("Id")
                        .HasName("pk_productCategoryId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ImageUrl");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ModelDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ModelDescription");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ModelName");

                    b.Property<int>("ProductSeriesId")
                        .HasColumnType("Int");

                    b.Property<string>("ProductUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ProductUrl");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("SKU");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.HasKey("Id")
                        .HasName("pk_ProductModel");

                    b.HasIndex("ProductSeriesId");

                    b.ToTable("ProductModel");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductPart", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("Cost");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ImageUrl");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("PartDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("PartDescription");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("PartName");

                    b.Property<int>("ProductModelId")
                        .HasColumnType("Int");

                    b.Property<string>("ProductUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ProductUrl");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.HasKey("Id")
                        .HasName("pk_ProductPart");

                    b.HasIndex("ProductModelId");

                    b.ToTable("ProductPart");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductSeries", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ImageUrl");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("Int");

                    b.Property<string>("ProductUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("ProductUrl");

                    b.Property<string>("SeriesDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("SeriesDescription");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("SeriesName");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.HasKey("Id")
                        .HasName("pk_ProductSeriesId");

                    b.HasIndex("ProductCategoriesId");

                    b.ToTable("ProductSeries");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    b.Property<int>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccessFailedCount")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("LockOutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("LockOutEnabled");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Password");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("Int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Username");

                    b.HasKey("Id")
                        .HasName("pk_User");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DomainLayer.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("Int")
                        .HasColumnName("Id");

                    b.Property<string>("CratedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("CratedBy");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDateTime");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("NormalizedName");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDateTime");

                    b.Property<int?>("UserId")
                        .HasColumnType("Int");

                    b.HasKey("Id")
                        .HasName("pk_UserRole");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductModel", b =>
                {
                    b.HasOne("DomainLayer.Models.ProductSeries", "ProductSeries")
                        .WithMany("ProductModels")
                        .HasForeignKey("ProductSeriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductSeries");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductPart", b =>
                {
                    b.HasOne("DomainLayer.Models.ProductModel", "ProductModel")
                        .WithMany("ProductParts")
                        .HasForeignKey("ProductModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductSeries", b =>
                {
                    b.HasOne("DomainLayer.Models.ProductCategory", "ProductCategory")
                        .WithMany("ProductSeries")
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.HasOne("DomainLayer.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("DomainLayer.Models.UserRole", b =>
                {
                    b.HasOne("DomainLayer.Models.User", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductCategory", b =>
                {
                    b.Navigation("ProductSeries");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductModel", b =>
                {
                    b.Navigation("ProductParts");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductSeries", b =>
                {
                    b.Navigation("ProductModels");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
